volumes:
  prometheus_data: {}
  grafana_data: {}

services:
  portainer:
    container_name: portainer
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    restart: unless-stopped
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer:/data

  homeassistant:
    container_name: home-assistant
    image: ghcr.io/home-assistant/home-assistant:stable
    volumes:
      - ./home-assistant:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    privileged: true
    network_mode: host

  feedbin-export:
    container_name: feedbin-export
    image: ghcr.io/dandezille/feedbin-export:latest
    restart: unless-stopped
    environment:
      - TICKER_INTERVAL
      - FEEDBIN_USER
      - FEEDBIN_PASSWORD
      - PINBOARD_API_KEY

  syncthing:
    container_name: syncthing
    image: lscr.io/linuxserver/syncthing
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - /mnt/pool/sync/config:/config
      - /mnt/pool/sync/data:/mnt/storage
    ports:
      - 8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp

  samba:
    container_name: samba
    image: dperson/samba
    restart: unless-stopped
    read_only: true
    stdin_open: true
    tty: true
    environment:
      - TZ=Europe/London
      - SHARE=media;/media
      - USERID=1000
      - GROUPID=1000
    volumes:
      - ./media:/media:ro
    ports:
      - 139:139
      - 445:445
    tmpfs:
      - /tmp

  unifi:
    container_name: unifi-controller
    image: lscr.io/linuxserver/unifi-controller
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./unifi:/config
    ports:
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 8443:8443
    # - 1900:1900/udp #optional
      - 8843:8843 #optional
      - 8880:8880 #optional
      - 6789:6789 #optional
      - 5514:5514/udp #optionalu

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - 9090:9090

  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - 3000:3000
